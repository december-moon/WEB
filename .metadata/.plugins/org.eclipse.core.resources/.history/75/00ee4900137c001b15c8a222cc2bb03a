package com.answer.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.answer.biz.AnswerBiz;
import com.answer.biz.AnswerBizImpl;
import com.answer.dto.AnswerDto;

@WebServlet("/AnswerController")

public class AnswerController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	public AnswerController(){
	}
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8"); 
		
		AnswerBiz biz = new AnswerBizImpl();
		
		String command = request.getParameter("command");
		if(command.equals("list")) {
			//1. list로 보내 준 값
			//2. db에서 가져올 값 = list
			List<AnswerDto> list = biz.selectList();
			//3. 전달할 값
			request.setAttribute("list", list);
			//4. 포워드
			dispatch(request, response, "boardlist.jsp");
			
			
		}else if(command.equals("detail")) {
			//받아올 값
			int seq = Integer.parseInt(request.getParameter("boardno"));
			//db에 값 전달할 거
			AnswerDto dto = biz.selectOne(seq);
			//보내줄게 있으면 request에 담기
			request.setAttribute("dto", dto);
			//포워드
			dispatch(request, response, "answerselect.jsp");
			
			
		}else if(command.equals("updateform")) {
			int seq = Integer.parseInt(request.getParameter("seq"));
			AnswerDto dto = biz.selectOne(seq);
			request.setAttribute("dto", dto);
			dispatch(request, response, "answerupdate.jsp");
		}else if(command.equals("updateres")) {
			int seq = Integer.parseInt(request.getParameter("seq"));
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			AnswerDto dto = new AnswerDto(seq, seq, seq, seq, null, title, content, null);
			int res=biz.boardUpdate(dto);
			if(res>0) {
				response.sendRedirect("answer.do?command=select&seq="+seq);
			}else {
				response.sendRedirect("answer.do?command=updateform.do&seq="+seq);
			}
			
		}else if(command.equals("delete")) {
			int seq = Integer.parseInt(request.getParameter("seq"));
			int res = biz.boardDelete(seq);
			if(res>0) {
				response.sendRedirect("answer.do?command=select&seq"+seq);
			}
		}else if (command.equals("insertform")) {
			response.sendRedirect("answerinsert.jsp");
		}else if (command.equals("insertres")) {
			String writer = request.getParameter("writer");
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			
			AnswerDto dto = new AnswerDto();
			dto.setWriter(writer);
			dto.setTitle(title);
			dto.setContent(content);
			
			int res = biz.boardInsert(dto);
			if(res>0) {
				response.sendRedirect("answer.do?command=list");
			}else {
				response.sendRedirect("answer.do?command=insertform");
			}
			
			
		}else if (command.equals("answerform")) {
			int boardno = Integer.parseInt(request.getParameter("boardno"));
			AnswerDto dto = biz.selectOne(boardno);
			request.setAttribute("dto", dto);
			dispatch(request, response, "answerform.jsp");
		}
		else if (command.equals("answerwrite")) {
			//1. answerform에서 받아온 값
			//부모의 값을 알아야 하기 때문에 부모 보드 받아옴
			int parentBoardNo = Integer.parseInt(request.getParameter("parentBoardNo"));
			String title = request.getParameter("title");
			String writer = request.getParameter("writer");
			String content = request.getParameter("content");
			//2.
			AnswerDto dto = new AnswerDto();
			dto.setBoardno(parentBoardNo);
			dto.setTitle(title);
			dto.setWriter(writer);
			dto.setContent(content);
			
			int res = biz.answerProc(dto);
			
			//3.
			//4.
			if(res>0) {
				jsResponse(response, "answer.do?command=list", "답변 성공!");
			}else {
				jsResponse(response, "answer.do?command=answerform&boardno="+parentBoardNo, "답변 실패!");
			}
		}
		
		response.getWriter().append("<a href='index.jsp'><h1>잘못왔다.</h1></a>");
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
	
	private void dispatch(HttpServletRequest request, HttpServletResponse response, String path) throws ServletException, IOException {
		RequestDispatcher dispatch = request.getRequestDispatcher(path);
		dispatch.forward(request, response);
	}
	private void jsResponse(HttpServletResponse response, String url, String msg) throws IOException {
		String s = "<script type = 'text/javascript'>"
				+"alert('"+msg+"');"
				+"location.href='"+url+"';"
				+ "</script>";
		response.getWriter().print(s);
	}
}